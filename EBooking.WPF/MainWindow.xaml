<Window
    x:Class="EBooking.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:EBooking.WPF"
    xmlns:views="clr-namespace:EBooking.WPF.Views"
    xmlns:dialogViews="clr-namespace:EBooking.WPF.Dialogs.Views"
    xmlns:vms="clr-namespace:EBooking.WPF.ViewModels"
    xmlns:dialogVms="clr-namespace:EBooking.WPF.Dialogs.ViewModels"
    mc:Ignorable="d"
    Title="EBooking"
    WindowStartupLocation="CenterScreen"
    WindowStyle="SingleBorderWindow"
    ResizeMode="CanResizeWithGrip"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    lex:LocalizeDictionary.DesignCulture="en-US"
    lex:ResxLocalizationProvider.DefaultAssembly="EBooking.WPF"
    lex:ResxLocalizationProvider.DefaultDictionary="Language"
    FontSize="16"
    Height="860"
    Width="1280">
    <Window.Resources>
        <DataTemplate
            DataType="{x:Type vms:LandingViewModel}">
            <views:LandingView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:LoginViewModel}">
            <views:LoginView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:SettingsViewModel}">
            <views:SettingsView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:RegisterViewModel}">
            <views:RegisterView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:CodebookViewModel}">
            <views:CodebookView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:AccommodationsViewModel}">
            <views:AccommodationsView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:AccommodationDetailsViewModel}">
            <views:AccommodationDetailsView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:FlightsViewModel}">
            <views:FlightsView />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type vms:ReservationsViewModel}">
            <views:ReservationsView />
        </DataTemplate>

        <DataTemplate
            DataType="{x:Type dialogVms:ExitApplicationDialogViewModel}">
            <dialogViews:ExitApplicationDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:LocationDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:LocationAddDialogViewModel}">
            <dialogViews:LocationAddDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:LocationEditDialogViewModel}">
            <dialogViews:LocationEditDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitFeatureDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitFeatureAddDialogViewModel}">
            <dialogViews:UnitFeatureAddDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitFeatureEditDialogViewModel}">
            <dialogViews:UnitFeatureEditDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:MultiDeleteDialogViewModel}">
            <dialogViews:ConfirmMultiDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationAddDialogViewModel}">
            <dialogViews:AccommodationSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationEditDialogViewModel}">
            <dialogViews:AccommodationSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationUnitAddDialogViewModel}">
            <dialogViews:AccommodationUnitSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationUnitEditDialogViewModel}">
            <dialogViews:AccommodationUnitSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:AccommodationUnitDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitReservationAddDialogViewModel}">
            <dialogViews:AccommodationUnitReservationDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitReservationEditDialogViewModel}">
            <dialogViews:AccommodationUnitReservationDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:UnitReservationDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:SaveSettingsDialogViewModel}">
            <dialogViews:SaveSettingsDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:FlightAddDialogViewModel}">
            <dialogViews:FlightSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:FlightEditDialogViewModel}">
            <dialogViews:FlightSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:FlightDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:ChangePasswordDialogViewModel}">
            <dialogViews:ChangePasswordDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:ChangeUserInfoDialogViewModel}">
            <dialogViews:ChangeUserInfoDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:TripReservationAddDialogViewModel}">
            <dialogViews:TripReservationSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:TripReservationEditDialogViewModel}">
            <dialogViews:TripReservationSubmitDialog />
        </DataTemplate>
        <DataTemplate
            DataType="{x:Type dialogVms:TripReservationDeleteDialogViewModel}">
            <dialogViews:ConfirmDeleteDialog />
        </DataTemplate>

        <Style
            x:Key="DisabledMenuItemStyle"
            BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBoxItem}"
            TargetType="ListBoxItem">
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding IsEnabled}"
                    Value="False">
                    <Setter
                        Property="IsEnabled"
                        Value="False" />
                    <Setter
                        Property="Foreground"
                        Value="Gray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <materialDesign:DialogHost
        DialogTheme="Inherit"
        Identifier="RootDialog"
        IsOpen="{Binding IsDialogOpen}"
        CloseOnClickAway="False"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <materialDesign:DialogHost.DialogContent>
            <ContentControl
                Margin="0"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                Content="{Binding CurrentDialogViewModel, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}" />
        </materialDesign:DialogHost.DialogContent>
        <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel
                    MinWidth="220">
                    <Grid
                        Margin="2 0"
                        DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="*" />
                            <ColumnDefinition
                                Width="auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:ColorZone
                            Margin="16 0 0 0"
                            VerticalAlignment="Center">
                            <TextBlock
                                FontSize="18"
                                FontWeight="Medium"
                                Text="{lex:Loc Menu_TitleText}" />
                        </materialDesign:ColorZone>
                        <ToggleButton
                            Grid.Column="1"
                            Margin="16"
                            Cursor="Hand"
                            HorizontalAlignment="Right"
                            IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            Width="28"
                            Height="30"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                    </Grid>
                    <ListBox
                        DataContext="{Binding MenuBinding}"
                        Margin="0 6 0 16"
                        ItemsSource="{Binding MenuItems}"
                        PreviewMouseLeftButtonUp="ListBox_PreviewMouseLeftButtonUp"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                        Style="{DynamicResource MaterialDesignNavigationPrimaryListBox}">
                        <ListBox.Resources>
                            <Style
                                TargetType="ScrollBar"
                                BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Button
                                    IsEnabled="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                    Height="45"
                                    Margin="-8"
                                    materialDesign:ButtonAssist.CornerRadius="0"
                                    Command="{Binding NavigateCommand}"
                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                    materialDesign:ElevationAssist.Elevation="Dp2"
                                    Cursor="Hand"
                                    Padding="0"
                                    Width="220"
                                    HorizontalContentAlignment="Left"
                                    HorizontalAlignment="Center">
                                    <StackPanel
                                        Orientation="Horizontal">
                                        <materialDesign:PackIcon
                                            Margin="14 0 10 0"
                                            Kind="{Binding Kind}"
                                            Width="26"
                                            Height="26" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="18"
                                            Text="{Binding Name}" />
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <StaticResource
                                ResourceKey="DisabledMenuItemStyle" />
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone
                    Padding="14 16"
                    materialDesign:ElevationAssist.Elevation="Dp3"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel
                            DockPanel.Dock="Left"
                            Orientation="Horizontal">
                            <ToggleButton
                                ToolTip="{lex:Loc Main_MenuButtonTooltip}"
                                Cursor="Hand"
                                x:Name="MenuToggleButton"
                                IsChecked="False"
                                Width="32"
                                Height="32"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                        </StackPanel>
                        <materialDesign:PopupBox
                            DockPanel.Dock="Right"
                            PlacementMode="BottomAndAlignRightEdges"
                            StaysOpen="False">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Text="{lex:Loc Main_ThemeSelectorText}"
                                    FontSize="15"
                                    Margin="16 2" />
                                <Grid
                                    Grid.Row="1"
                                    Margin="18 12 18 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="auto" />
                                        <ColumnDefinition
                                            Width="auto" />
                                        <ColumnDefinition
                                            Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        FontSize="13"
                                        Grid.Column="0"
                                        Margin="0 0 12 0"
                                        Text="{lex:Loc Main_ThemeLightText}" />
                                    <ToggleButton
                                        Grid.Column="1"
                                        Cursor="Hand"
                                        IsChecked="{Binding IsDarkMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        HorizontalAlignment="Center" />
                                    <TextBlock
                                        FontSize="13"
                                        Grid.Column="2"
                                        Margin="12 0 2 0"
                                        Text="{lex:Loc Main_ThemeDarkText}" />
                                </Grid>
                                <Separator
                                    Grid.Row="2"
                                    Grid.ColumnSpan="3"
                                    Margin="2 8" />
                                <Button
                                    Content="{lex:Loc Main_ExitButtonText}"
                                    Command="{Binding ExitApplicationCommand}"
                                    Grid.Row="3"
                                    Margin="0 2 12 0"
                                    FontSize="14"
                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right" />
                            </Grid>
                        </materialDesign:PopupBox>
                        <Button
                            Margin="16 -4 8 -4"
                            ToolTip="{lex:Loc Main_LogoutButtonTooltip}"
                            Visibility="{Binding IsLogoutEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                            DockPanel.Dock="Right"
                            Command="{Binding LogoutCommand}"
                            Style="{DynamicResource MaterialDesignIconForegroundButton}"
                            Height="36"
                            Width="36"
                            Cursor="Hand"
                            Padding="0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                            <materialDesign:PackIcon
                                Kind="LogoutVariant"
                                Width="26"
                                Height="26" />
                        </Button>
                        <ToggleButton
                            Margin="16 -4 0 -4"
                            Width="36"
                            Height="36"
                            ToolTip="{lex:Loc Main_HomePageButtonTooltip}"
                            Command="{Binding HomeCommand}"
                            Style="{DynamicResource MaterialDesignIconForegroundButton}"
                            Cursor="Hand"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">
                            <materialDesign:PackIcon
                                Kind="Home"
                                Width="29"
                                Height="29" />
                        </ToggleButton>
                        <TextBlock
                            Margin="10 0 10 0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            AutomationProperties.Name=""
                            FontSize="17"
                            FontWeight="Medium"
                            Text="{lex:Loc Main_SloganText}" />
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
                            Height="*" />
                    </Grid.RowDefinitions>
                    <ContentControl
                        Margin="5"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Content="{Binding CurrentViewModel, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}" />
                    <materialDesign:Snackbar
                        Panel.ZIndex="1"
                        x:Name="MainSnackbar"
                        Grid.Row="0"
                        Width="400"
                        MessageQueue="{Binding MainMessageQueue, Mode=OneTime}" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
